@page "/cart"
@inject ICartService CartService
@if (!OrderPlaced)
{
    <h3>Shopping cart</h3>

    @if (cartItems == null || cartItems.Count <= 0)
    {
        <span>You have no items in your cart.</span>
    }
    else
    {
        <div>
            @foreach (var item in cartItems)
            {
                <div class="item-container">
                    <div class="item-image-wrapper"> <img src="@item.Image" class="item-image" /> </div>
                    <div class="item-name">
                        <h5><a href="/Product/@item.ProductId"> @item.ProductTitle</a></h5>
                        <span>@item.EditionName</span> <br />
                        <button class="btn-item" @onclick="@(()=>DeleteItem(item))">Delete</button>
                        <EditForm Model="item">
                            <InputNumber id="quantity" @bind-Value="item.Quantity" class="form-control" style="width:70px;"></InputNumber>
                        </EditForm>
                    </div>
                    <div class="item-price">$@(item.Price * item.Quantity) </div>
                </div>
            }
            <div class="item-price">
                Total(@cartItems.Count): $@cartItems.Sum(item => item.Price * item.Quantity)
            </div>
            <div style="text-align:center; margin-top:10px">
                <button class="btn btn-primary btn-lg" @onclick="PlaceOrder"> Place order</button>
            </div>
        </div>
    }
}
else
{
    <h3> Thank you for your order !</h3>
    <h4>Here's what you'll get:</h4>
    <div>
        @foreach (var item in cartItems)
        {
            <div class="item-container">
                <div class="item-image-wrapper"> <img src="@item.Image" class="item-image" /> </div>
                <div class="item-name">
                    <h5><a href="/Product/@item.ProductId"> @item.ProductTitle</a></h5>
                    <span>@item.EditionName</span> <br />

                </div>
                <div class="item-price">$@(item.Price * item.Quantity) </div>
            </div>
        }
        <div class="item-price">
            Total(@cartItems.Count): $@cartItems.Sum(item => item.Price * item.Quantity)
        </div>
        <div style="text-align:center; margin-top:10px">
        </div>
    </div>
}

@code {
    List<CartItem> cartItems = new List<CartItem>();
    bool OrderPlaced = false;
    protected override async Task OnInitializedAsync()
    {
        cartItems= await CartService.GetCartItems();
    }
    private async Task DeleteItem(CartItem item)
    {
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems();
    }
    private async Task PlaceOrder()
    {
        OrderPlaced = true;
        await CartService.EmptyCart();

    }

}